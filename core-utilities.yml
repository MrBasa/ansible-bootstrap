# core-utilities.yml
- name: "Bootstrap a new Linux environment (Debian/Fedora/Arch)"
  hosts: localhost
  connection: local

  vars:
    # --- Automatically discover the user who ran the 'sudo' command ---
    bootstrap_user: "{{ ansible_env.SUDO_USER | default(ansible_user_id) }}"

    # --- Packages with identical names across all distros ---
    common_packages:
      - git
      - curl
      - fish
      - lsd
      - bat # Name is consistent, executable is handled post-install
      - fzf
      - zoxide
      - duf
      - mc
      - entr
      - tealdeer
      - btop
      - micro
      - thefuck
      - figlet
      - cowsay
      - fortune-mod # Base for fortunes

    # --- Distro-Specific Packages (Official Repositories Only) ---
    debian_packages:
      - 7zip
      - fonts-firacode
      - fortune-anarchism
      - anarchism

    fedora_packages:
      - cascadia-code-nf-fonts
      - chezmoi

    arch_official_packages:
      - 7zip
      - ttf-firacode-nerd
      - chezmoi

    # --- AUR-Only Packages (for Arch Linux) ---
    arch_aur_packages:
      - yay
      - fortune-mod-anarchism
      - anarchism

  pre_tasks:
    - name: "Pre-flight check for passwordless sudo on Arch Linux"
      when: ansible_os_family == "Archlinux"
      block:
        - name: "Check if user '{{ bootstrap_user }}' can run pacman without a password"
          become: yes
          become_user: "{{ bootstrap_user }}"
          ansible.builtin.command: "sudo -n --list /usr/bin/pacman"
          register: sudo_check
          changed_when: false
          ignore_errors: true

        - name: "Fail if passwordless sudo for pacman is not configured"
          when: sudo_check.rc != 0
          ansible.builtin.fail:
            msg:
              - "User '{{ bootstrap_user }}' does not have passwordless sudo access for pacman."
              - "This is required for non-interactive AUR package installation."
              - "Please run 'sudo ./set_sudoers.sh add {{ bootstrap_user }}' before executing this playbook."

  tasks:
    # --- Official Package Installation ---
    - name: "Update package cache and install packages (Debian)"
      become: yes
      ansible.builtin.apt:
        name: "{{ common_packages + debian_packages }}"
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: "Install packages (Fedora)"
      become: yes
      ansible.builtin.dnf:
        name: "{{ common_packages + fedora_packages }}"
        state: present
      when: ansible_os_family == "RedHat"

    - name: "Install Official Packages (Arch)"
      become: yes
      community.general.pacman:
        name: "{{ common_packages + arch_official_packages }}"
        state: present
        update_cache: yes
      when: ansible_os_family == "Archlinux"

    # --- AUR Package Installation ---
    - name: "Install AUR Packages (Arch only)"
      become: yes
      become_user: "{{ bootstrap_user }}"
      kewlfft.aur.aur:
        name: "{{ arch_aur_packages }}"
        state: present
      when: ansible_os_family == "Archlinux"

    # --- System-Wide Configuration ---
    - name: "Link batcat to bat (Debian only)"
      become: yes
      ansible.builtin.file:
        src: /usr/bin/batcat
        dest: /usr/local/bin/bat
        state: link
      when: ansible_os_family == "Debian"

    - name: "Install Chezmoi via script (Debian only)"
      become: yes
      ansible.builtin.shell: 'sh -c "$(curl -fsLS get.chezmoi.io)" -- -b /usr/local/bin'
      args:
        creates: /usr/local/bin/chezmoi
      when: ansible_os_family == "Debian"
