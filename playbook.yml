# playbook.yml
- name: "Bootstrap a new Linux environment (Debian/Fedora/Arch)"
  hosts: localhost
  connection: local
  # 'become' will be handled on a per-task basis now
  # become: yes 

  vars:
    # Packages with identical names on all OS families
    common_packages:
      - fish
      - lsd
      - git
      - curl

    # Packages for Debian/Ubuntu
    debian_packages:
      - fonts-firacode
      - bat # Installs the binary as 'batcat'

    # Packages for RedHat/Fedora
    redhat_packages:
      - fira-code-fonts
      - bat # Installs the binary as 'bat'

    # Packages for Arch Linux
    arch_packages:
      - ttf-fira-code
      - bat # Binary is 'bat', no symlink needed
      - chezmoi # Available in the official Arch repos, which is preferred

  tasks:
    - name: "Update package cache and install packages (Debian)"
      become: yes
      ansible.builtin.apt:
        name: "{{ common_packages + debian_packages }}"
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: "Install packages (RedHat)"
      become: yes
      ansible.builtin.dnf:
        name: "{{ common_packages + redhat_packages }}"
        state: present
      when: ansible_os_family == "RedHat"

    - name: "Install packages (Arch)"
      become: yes
      community.general.pacman:
        name: "{{ common_packages + arch_packages }}"
        state: present
        update_cache: yes
      when: ansible_os_family == "Archlinux"

    - name: "Link batcat to bat (Debian only)"
      become: yes
      ansible.builtin.file:
        src: /usr/bin/batcat
        dest: /usr/local/bin/bat
        state: link
      when: ansible_os_family == "Debian"

    - name: "Install Chezmoi via script (for Debian/Fedora)"
      become: yes
      ansible.builtin.shell: 'sh -c "$(curl -fsLS get.chezmoi.io)" -- -b /usr/local/bin'
      args:
        creates: /usr/local/bin/chezmoi
      when: ansible_os_family != "Archlinux"

    - name: "Install yay AUR helper (Arch only)"
      block:
        - name: "Install build tools"
          become: yes
          community.general.pacman:
            name:
              - base-devel
              - git
            state: present
        
        - name: "Clone yay repository"
          ansible.builtin.git:
            repo: 'https://aur.archlinux.org/yay.git'
            dest: "/tmp/yay"
        
        - name: "Build and install yay"
          # This must run as a regular user, not root
          become: no 
          ansible.builtin.shell: "makepkg -si --noconfirm"
          args:
            chdir: "/tmp/yay"
            creates: /usr/bin/yay
      when: ansible_os_family == "Archlinux"
